<?php

add_action('woocommerce_before_checkout_billing_form', function() {
    if (!WC()->checkout()) return;

    $checkout = WC()->checkout();
    
    echo '<div class="woocommerce-billing-fields__field-wrapper">';
    woocommerce_form_field('billing_email', [
        'type'        => 'email',
        'label'       => __('Email Address', 'woocommerce'),
        'required'    => true,
        'class'       => ['form-row-wide'],
        'autocomplete' => 'email'
    ], $checkout->get_value('billing_email'));
    echo '</div>';
});


add_filter('woocommerce_checkout_fields', function($fields) {
    if (isset($fields['billing']['billing_email'])) {
        unset($fields['billing']['billing_email']); // Removes the default email field
    }
    return $fields;
});


//payment section

add_action( 'woocommerce_checkout_order_review', 'remove_default_payment_section', 1 );
function remove_default_payment_section() {
    remove_action( 'woocommerce_checkout_order_review', 'woocommerce_checkout_payment', 20 );
}

add_action( 'woocommerce_after_checkout_billing_form', 'move_payment_below_address', 20 );
function move_payment_below_address() {
    woocommerce_checkout_payment();
}

add_action( 'woocommerce_after_checkout_shipping_form', 'move_payment_below_address', 20 );




// take the email field before billing details
add_action( 'wp_footer', 'move_email_field_above_billing_details_js' );
function move_email_field_above_billing_details_js() {
    ?>
    <script type="text/javascript">
        (function($) {
            $(document).ready(function() {
                console.log('Script is running');
                // Move the email field above the billing details section
                var emailField = $('#billing_email_field');
                if (emailField.length) {
                    console.log('Email field found');
                    // Remove the email field from its current position
                    emailField.remove();
                    // Insert the email field before the "Billing Details" heading
                    emailField.insertBefore('.woocommerce-checkout h3:first');
                    console.log('Email field moved');
                } else {
                    console.log('Email field not found');
                }
            });
        })(jQuery);
    </script>
    <?php
}


// add the text before email


add_action( 'wp_footer', 'move_email_field_and_add_customer_text_js' );
function move_email_field_and_add_customer_text_js() {
    ?>
    <script type="text/javascript">
        (function($) {
            $(document).ready(function() {
                // Move the email field above the billing details section
                var emailField = $('#billing_email_field');
                if (emailField.length) {
                    // Remove the email field from its current position
                    emailField.remove();
                    
                    // Create a new h3 element for the "Customer" text
                    var customerText = $('<h3 class="customer-text">Customer</h3>');
                    
                    // Insert the "Customer" text before the "Billing Details" heading
                    customerText.insertBefore('.woocommerce-checkout h3:first');
                    
                    // Insert the email field after the "Customer" text
                    emailField.insertAfter(customerText);
                }
            });
        })(jQuery);
    </script>
    <?php
}

add_action( 'wp_head', 'add_custom_css_for_customer_text' );
function add_custom_css_for_customer_text() {
    ?>
    <style type="text/css">
        .customer-text {
            color: white;
            margin-bottom: 2px;
        }
    </style>
    <?php
}


//Items in order section 

/*
add_action( 'woocommerce_after_checkout_form', 'duplicate_order_review_below_payment' );
function duplicate_order_review_below_payment() {
    // Get the order review content
    ob_start();
    woocommerce_order_review();
    $order_review_content = ob_get_clean();

    // Output the duplicated order review content below the payment section
    echo '<div id="duplicated-order-review">';
    echo $order_review_content;
    echo '</div>';
}


add_action( 'wp_footer', 'position_duplicated_order_review_js' );
function position_duplicated_order_review_js() {
    ?>
    <script type="text/javascript">
        (function($) {
            $(document).ready(function() {
                // Move the duplicated order review below the payment section
                var duplicatedOrderReview = $('#duplicated-order-review');
                if (duplicatedOrderReview.length) {
                    // Remove the duplicated order review from its current position
                    duplicatedOrderReview.remove();
                    
                    // Insert the duplicated order review after the payment section
                    duplicatedOrderReview.insertAfter('#payment');
                }
            });
        })(jQuery);
    </script>
    <?php
}
*/
//add "items in order" text above it



/*
add_action( 'woocommerce_checkout_order_review', 'remove_original_order_review', 1 );
function remove_original_order_review() {
    remove_action( 'woocommerce_checkout_order_review', 'woocommerce_order_review', 10 );
}

// Add duplicated order review below payment section with a new heading
add_action( 'woocommerce_after_checkout_form', 'duplicate_order_review_with_heading' );
function duplicate_order_review_with_heading() {
    // Get the order review content
    ob_start();
    woocommerce_order_review();
    $order_review_content = ob_get_clean();

    // Output the duplicated order review content below the payment section with a new heading
    echo '<div id="duplicated-order-review">';
    echo '<h3 id="order_review_heading">Order Summary</h3>'; // New heading
    echo $order_review_content;
    echo '</div>';
}
*/



// Add custom CSS for the order summary text


// Add duplicated order review below payment section with a new heading
add_action( 'woocommerce_after_checkout_form', 'duplicate_order_review_with_custom_design' );
function duplicate_order_review_with_custom_design() {
    // Start building the custom order review content
    echo '<div id="duplicated-order-review">';
    echo '<h3 id="order_review_heading">Items in Order</h3>'; // New heading

    // Get the cart items
    $cart_items = WC()->cart->get_cart();

    if (!empty($cart_items)) {
        echo '<ul class="custom-order-items">';
        foreach ($cart_items as $item) {
            $product = $item['data'];
            $product_name = $product->get_name();
            $quantity = $item['quantity'];
            $price = wc_price($product->get_price());

            echo '<li>';
            echo '<div class="item-details">';
            echo '<span class="item-name">' . $product_name . '</span><br>';
            echo '<span class="item-quantity">Quantity: ' . $quantity . '</span>';
            echo '</div>';
            echo '<span class="item-price">' . $price . '</span>';
            echo '</li>';
        }
        echo '</ul>';
    }

    echo '</div>';
}

add_action( 'wp_head', 'add_custom_css_for_order_summary_text' );
function add_custom_css_for_order_summary_text() {
    ?>
    <style type="text/css">
        #order_review_heading {
            color: white;
            margin-bottom: 10px;
            font-size: 1.5em;
        }

        .custom-order-items {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .custom-order-items li {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding: 10px 0;
            font-size: 1em;
        }

        .item-details {
            display: inline-block;
            max-width: calc(100% - 150px); /* Adjust based on your price width */
            line-height: 1.4;
        }

        .item-name {
            font-weight: bold;
            display: block;
            color: white;
        }

        .item-quantity {
            display: block;
            font-size: 0.9em;
            color: rgba(255, 255, 255, 0.7);
        }

        .item-price {
            font-weight: bold;
            color: white;
            margin-left: auto; /* Ensure price stays aligned to the right */
        }

        /* Optional: Add hover effect for better UX */
        .custom-order-items li:hover {
            background-color: rgba(255, 255, 255, 0.05);
        }
    </style>
    <?php
}



//move the place order button

add_action( 'woocommerce_checkout_before_order_review', 'remove_default_place_order_button', 1 );
function remove_default_place_order_button() {
    remove_action( 'woocommerce_checkout_after_terms_and_conditions', 'woocommerce_checkout_payment' );
}
